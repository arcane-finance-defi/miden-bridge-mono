use.miden::account
use.miden::note
use.bridge::fungible_wrapper

# ERRORS
# =================================================================================================

# CROSSCHAIN script expects gte 12 note inputs
const.ERR_CROSSCHAIN_WRONG_NUMBER_OF_INPUTS=0x0003b000

# CROSSCHAIN script expects exactly 1 asset
const.ERR_CROSSCHAIN_WRONG_NUMBER_OF_ASSETS=0x0003b001


# CONSTANTS
# =================================================================================================

const.INPUTS_NUM_PTR=0
const.INPUTS_INDEX_PTR=1
const.ASSETS_PTR=4
const.INPUTS_PTR=8


#! CROSSCHAIN script: burns the asset and emits the bridge exit event as public note
#!
#! Requires that the account exposes:
#! - bridge::fungible_wrapper::bridge procedure.
#!
#! Inputs:
#!   - OUTPUT_NOTE_SERIAL_NUM
#!   - ASSET
#!   - dest_chain_id
#!   - dest_chain_addr_felt1
#!   - dest_chain_addr_felt2
#!   - dest_chain_addr_felt3
#!   - calldata_bytes_length
#!   - calldata
#!   - call_addr_felt1
#!   - call_addr_felt2
#!   - call_addr_felt3
#! Outputs: []
begin
    push.INPUTS_PTR exec.note::get_inputs
    # => [num_inputs, inputs_ptr]

    dup u32divmod.4 neq.0 add mem_store.INPUTS_NUM_PTR
    push.1 mem_store.INPUTS_INDEX_PTR

    gte.12 assert.err=ERR_CROSSCHAIN_WRONG_NUMBER_OF_INPUTS
    drop

    push.ASSETS_PTR exec.note::get_assets
    # => [num_of_assets, ASSETS_PTR, ...]

    eq.1 assert.err=ERR_CROSSCHAIN_WRONG_NUMBER_OF_ASSETS
    drop

    padw mem_loadw.INPUTS_PTR
    padw mem_loadw.ASSETS_PTR

    mem_load.INPUTS_INDEX_PTR mem_load.INPUTS_NUM_PTR lt
    while.true
        padw mem_load.INPUTS_INDEX_PTR mul.4 add.INPUTS_PTR mem_loadw
        mem_load.INPUTS_INDEX_PTR add.1 mem_store.INPUTS_INDEX_PTR
        mem_load.INPUTS_INDEX_PTR mem_load.INPUTS_NUM_PTR lt
    end

    call.fungible_wrapper::bridge
end